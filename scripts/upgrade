#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service=$app --action="stop" --wait_until="Stopped"
ynh_systemctl --service=$app-ui --action="stop" --wait_until="Stopped" --log_path="/var/log/$app/$app-ui.log"
ynh_systemctl --service=$app-pict-rs --action="stop" --wait_until="Stopped" --log_path="/var/log/$app/$app-pict-rs.log"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

# Removing previously installed iframely
if ynh_hide_warnings yunohost service status $app-iframely >/dev/null
then
	ynh_script_progression "Removing $app-iframely service integration..."
	yunohost service remove $app-iframely
	ynh_app_setting_delete  --key=random
	ynh_app_setting_delete  --key=port_iframely
	ynh_config_remove_systemd$app-iframely
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading source files..."

ynh_setup_source --dest_dir="$install_dir/build-lemmy/"
ynh_setup_source --dest_dir="$install_dir/build-lemmy-ui/"
ynh_setup_source --dest_dir="$install_dir/lemmy-ui/lemmy-translations/" --source_id="lemmy-translations"
ynh_setup_source --dest_dir="$install_dir/build-pict-rs/"

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression "Upgrading dependencies..."

ynh_nodejs_install

ln -fs /usr/lib/x86_64-linux-musl/libc.so /lib/libc.musl-x86_64.so.1

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Upgrading NGINX web server configuration..."

ynh_config_add_nginx

#=================================================
# INSTALL SHARP
#=================================================

pushd $install_dir/lemmy-ui
	ynh_hide_warnings ynh_exec_as_app yarn add sharp
popd

#=================================================
# MAKE UPGRADE
#=================================================
ynh_script_progression "Making upgrade..."

# FIXME: this is still supported but the recommendation is now to *always* re-setup the app sources wether or not the upstream sources changed
if ynh_app_upstream_version_changed
then
	# Install lemmy-ui
	pushd $install_dir/build-lemmy-ui
		./docker-image-extract dessalines/lemmy-ui:$(ynh_app_upstream_version)
	popd
	mkdir -p "$install_dir/lemmy-ui/"
	rsync -a "$install_dir/build-lemmy-ui/output/app/" "$install_dir/lemmy-ui/"
	ynh_safe_rm "$install_dir/build-lemmy-ui"

	# Install lemmy
	pushd $install_dir/build-lemmy
		./docker-image-extract dessalines/lemmy:$(ynh_app_upstream_version)
	popd
	mkdir -p "$install_dir/lemmy/"
	mv -f "$install_dir/build-lemmy/output/app/lemmy" "$install_dir/lemmy/lemmy"
	ynh_safe_rm "$install_dir/build-lemmy"

	# Install pict-rs
	pushd $install_dir/build-pict-rs
		./docker-image-extract asonix/pictrs:$PICTRS_VERSION
	popd
	mkdir -p "$install_dir/pict-rs/"
	mv -f "$install_dir/build-pict-rs/output/usr/local/bin/pict-rs" "$install_dir/pict-rs/pict-rs"
	ynh_safe_rm "$install_dir/build-pict-rs"

	# (Dirty) Install ImageMagick
	# Requires 'libfuse2' and 'libimage-exiftool-perl' apt dependencies
	ynh_script_progression "Downloading and installing ImageMagick..."
	download_and_install_appimage --name="magick" --url="https://imagemagick.org/archive/binaries/magick" --directory="$install_dir/pict-rs" --symlink="$install_dir/pict-rs/magick"
fi

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating configuration..."

# Lemmy configuration
mkdir -p "$install_dir/lemmy/"
chown $app:$app "$install_dir/lemmy"
ynh_config_add --template="lemmy.hjson" --destination="$install_dir/config/config.hjson"

# Pict-RS configuration
mkdir -p "$install_dir/pict-rs"
chown $app:$app "$install_dir/pict-rs"
ynh_config_add --template="pict-rs.toml" --destination="$install_dir/pict-rs/pict-rs.toml"

chmod 400 "$install_dir/pict-rs/pict-rs.toml"
chown "$app:$app" "$install_dir/pict-rs/pict-rs.toml"

# ImageMagick configuration
mkdir -p "$install_dir/.config/ImageMagick"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown $app:$app -R "$install_dir/.config"
ynh_config_add --template="policy.xml" --destination="$install_dir/.config/ImageMagick/policy.xml"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 400 "$install_dir/.config/ImageMagick/policy.xml"
chown -R $app:$app "$install_dir/.config"

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression "Creating pgcrypto extension if needed..."

ynh_psql_db_shell <<< "CREATE EXTENSION IF NOT EXISTS pgcrypto;"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression "Upgrading systemd configuration..."

# Prep local path for Pict-RS
pictrs_path="$install_dir/pict-rs:$PATH"

# Create a dedicated systemd config
ynh_config_add_systemd  --template="lemmy.service"
ynh_config_add_systemd --service="$app-ui" --template="lemmy-ui.service"
ynh_config_add_systemd --service="$app-pict-rs" --template="pict-rs.service"

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression "Upgrading logrotate configuration..."

mkdir -p "/var/log/$app"

ynh_config_add_logrotate

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression "Integrating service in YunoHost..."

yunohost service add $app --description="Link aggregator/Reddit clone" --log="/var/log/$app/$app.log"
yunohost service add $app-ui --description="Link aggregator/Reddit clone" --log="/var/log/$app/$app-ui.log"
yunohost service add $app-pict-rs --description="Simple image hosting service for Lemmy" --log="/var/log/$app/$app-pict-rs.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting $app's systemd services..." --weight=1

# TMP rebuild sharp
pushd $install_dir/lemmy-ui

	ynh_hide_warnings ynh_exec_as_app node_load_PATH npm rebuild sharp
popd

ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service=$app --action="start"  --wait_until="Starting http server at"
ynh_systemctl --service=$app-ui --action="start" --log_path="/var/log/$app/$app-ui.log" --wait_until="http://0.0.0.0"
ynh_systemctl --service=$app-pict-rs --action="start" --log_path="/var/log/$app/$app-pict-rs.log" --wait_until="starting in Actix runtime"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
